{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","editText","setEditText","toDos","setToDos","done","modify","setModify","modifyBtn","modifyCancelBtn","modiFyText","payload","saveToDos","toSave","a","async","AsyncStorage","setItem","JSON","stringify","alert","saveTab","saveData","useEffect","getItem","loadText","parse","loadToDos","workData","currentTab","View","style","styles","container","StatusBar","header","TouchableOpacity","onPress","Text","btnText","color","TextInput","onSubmitEditing","newToDos","Date","now","returnKeyType","value","onChangeText","placeholder","input","ScrollView","Object","keys","map","key","toDo","flexDirection","justifyContent","alignItems","console","log","modifyToDo","MaterialIcons","name","size","doneText","toDoText","doneTodo","Fontisto","Platform","OS","confirm","Alert","deleteToDo","StyleSheet","create","flex","backgroundColor","paddingHorizontal","marginTop","fontSize","fontWeight","paddingVertical","borderRadius","marginVertical","marginBottom","width","marginRight","textDecorationLine"],"mappings":"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","file":"static/js/app.f85e8dde.chunk.js","sourcesContent":["export const theme = {\n  bg: \"black\",\n  grey: \"#3A3D40\",\n  toDoBg: \"#5C5C60\",\n};\n","import { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport { theme } from \"./colors\";\nconst STORAGE_KEY = \"@toDos\";\nconst WORK_KEY = \"@currentWork\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [editText, setEditText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  const [done, setDone] = useState(false);\n  const [modify, setModify] = useState(false);\n  const travel = () => saveTab(false);\n  const work = () => saveTab(true);\n  const modifyBtn = () => setModify(true);\n  const modifyCancelBtn = () => {\n    setModify(false);\n    setText(\"\");\n  };\n  const onChangeText = (payload) => setText(payload);\n  const modiFyText = (payload) => setEditText(payload);\n  const saveToDos = async (toSave) => {\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n    } catch (err) {\n      alert(err);\n    }\n  };\n  const loadToDos = async () => {\n    try {\n      const loadText = await AsyncStorage.getItem(STORAGE_KEY);\n      if (loadText) {\n        setToDos(JSON.parse(loadText));\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n  const saveTab = async (saveData) => {\n    setWorking(saveData);\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(saveData));\n  };\n  const currentTab = async () => {\n    try {\n      const workData = await AsyncStorage.getItem(WORK_KEY);\n      if (workData) {\n        setToDos(JSON.parse(workData));\n      }\n    } catch (err) {\n      alert(err);\n      working(true);\n    }\n  };\n  const doneTodo = async (key) => {\n    const newToDos = { ...toDos };\n    newToDos[key].done = !newToDos[key].done;\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n  };\n  useEffect(() => {\n    loadToDos();\n    currentTab();\n    // modifyToDo();\n  }, []);\n  const addToDo = async () => {\n    if (text === \"\") {\n      return;\n    }\n    const newToDos = {\n      ...toDos,\n      [Date.now()]: { text, working, modify, done },\n    };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setText(\"\");\n  };\n  const modifyToDo = async (key) => {\n    try {\n      if (editText === \"\") {\n        return;\n      }\n\n      const newToDos = { ...toDos };\n      setEditText(newToDos[key].text);\n      newToDos[key].text = editText;\n      setToDos(newToDos);\n      await saveToDos(newToDos);\n      setEditText(\"\");\n      setModify(false);\n      console.log(toDos);\n    } catch (err) {\n      alert(err);\n    }\n  };\n  const deleteToDo = (key) => {\n    if (Platform.OS === \"web\") {\n      const ok = confirm(\"Do you want to delete this To Do?\");\n      if (ok) {\n        const newToDos = { ...toDos };\n        delete newToDos[key];\n        setToDos(newToDos);\n        saveToDos(newToDos);\n      }\n    } else {\n      Alert.alert(\"Delete To Do\", \"Are you sure?\", [\n        {\n          text: \"OK\",\n          onPress: () => {\n            const newToDos = { ...toDos };\n            delete newToDos[key];\n            setToDos(newToDos);\n            saveToDos(newToDos);\n          },\n        },\n        { text: \"Cancel\" },\n      ]);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text\n            style={{ ...styles.btnText, color: working ? \"white\" : theme.grey }}\n          >\n            Work\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text\n            style={{\n              ...styles.btnText,\n              color: !working ? \"white\" : theme.grey,\n            }}\n          >\n            Travel\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <TextInput\n        onSubmitEditing={addToDo}\n        returnKeyType=\"send\"\n        value={text}\n        onChangeText={onChangeText}\n        placeholder={working ? \"Add a To Do\" : \"Where do you want to go?\"}\n        style={styles.input}\n      />\n      <ScrollView>\n        {Object.keys(toDos).map((key) =>\n          toDos[key].working === working ? (\n            <View style={styles.toDo} key={key}>\n              {modify === true ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <TextInput\n                    onSubmitEditing={() => modifyToDo(key)}\n                    returnKeyType=\"send\"\n                    onChangeText={modiFyText}\n                    style={styles.modify}\n                    placeholder={toDos[key].text}\n                  ></TextInput>\n                  <TouchableOpacity onPress={modifyCancelBtn}>\n                    <MaterialIcons name=\"cancel\" size={20} color={theme.grey} />\n                  </TouchableOpacity>\n                </View>\n              ) : (\n                <>\n                  {toDos[key].done ? (\n                    <Text style={styles.doneText}>{toDos[key].text}</Text>\n                  ) : (\n                    <Text style={styles.toDoText}>{toDos[key].text}</Text>\n                  )}\n                  <View>\n                    <TouchableOpacity\n                      onPress={() => {\n                        doneTodo(key);\n                      }}\n                    >\n                      {toDos[key].done ? (\n                        <Fontisto\n                          name=\"checkbox-active\"\n                          size={20}\n                          color={theme.grey}\n                        />\n                      ) : (\n                        <Fontisto\n                          name=\"checkbox-passive\"\n                          size={20}\n                          color={theme.grey}\n                        />\n                      )}\n                    </TouchableOpacity>\n                  </View>\n                  <View style={styles.modifyBtn}>\n                    <TouchableOpacity onPress={modifyBtn}>\n                      <MaterialIcons\n                        name=\"published-with-changes\"\n                        size={20}\n                        color={theme.grey}\n                      />\n                    </TouchableOpacity>\n                  </View>\n                </>\n              )}\n              <TouchableOpacity onPress={() => deleteToDo(key)}>\n                <Fontisto name=\"trash\" size={18} color={theme.grey} />\n              </TouchableOpacity>\n            </View>\n          ) : null\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginVertical: 20,\n    fontSize: 18,\n  },\n  toDo: {\n    backgroundColor: theme.toDoBg,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  toDoText: {\n    color: \"white\",\n    width: 280,\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n  modify: {\n    backgroundColor: \"white\",\n    paddingVertical: 3,\n    paddingHorizontal: 10,\n    width: 230,\n    marginVertical: 5,\n    borderRadius: 5,\n    marginRight: 60,\n  },\n  doneText: {\n    color: \"#848480\",\n    width: 280,\n    fontSize: 16,\n    fontWeight: \"500\",\n    textDecorationLine: \"line-through\",\n  },\n});\n"],"sourceRoot":""}